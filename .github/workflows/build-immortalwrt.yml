#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: build-ImmortalWrt
on:
  # push:
  #   paths: [ immortalwrt_openwrt ]
  # schedule: [ cron: 0 2 */7 * * ]
  # watch:
  #   types: started
  workflow_dispatch:
    inputs:
      branch:
        description: 'ÈÄâÊã©ImmortalWrt‰ªìÂ∫ìÁöÑÂàÜÊîØÔºö'
        default: 'openwrt-18.06-k5.4'
        required: true
        type: choice
        options: [ openwrt-18.06-k5.4, openwrt-21.02, master, openwrt-18.06 ]
      target:
        description: 'ÈÄâÊã©Ë¶ÅÁîüÊàêfirmwareÁöÑÊú∫ÂûãÔºö'
        default: 'r1-plus-lts'
        required: true
        type: choice
        options: [ x86_64, newifi-d2, r4s, r2s, r2c, phicomm_k2p, armvirt_64_Default, asus_rt-n16, r1-plus-lts, r1-plus ]
      version:
        description: 'ÈÄâÊã©Ë¶ÅÁîüÊàêÁâàÊú¨Ôºö pure(Á∫ØÂáÄ)Ôºåplus(ÂÖ®ÂÆ∂Ê°∂)'
        default: 'plus'
        required: true
        type: choice
        options: [ pure, plus ]
      ip:
        description: 'ËÆæÁΩÆwebÁôªÂΩïIPÔºöÔºàÈÄâÂ°´Ôºâ'
        required: false
      partsize:
        description: 'ËÆæÁΩÆrootfsÂ§ßÂ∞èÔºöÔºàÈÄâÂ°´,Âè™ÈÄÇÁî®x86_64ÔºårÁ≥ªÂàóÔºåarmvirtÔºâ'
        required: false

env:
  UPLOAD_RELEASE: true
  UPLOAD_PACKAGES: true
  UPLOAD_SYSUPGRADE: true
  UPLOAD_BIN_DIR: true
  UPLOAD_COWTRANSFER: true
  UPLOAD_WETRANSFER: true
  REPO_FLODER: openwrt
  CACHE_ACTIONS: true

jobs:
  immo-openwrt:
    name: immortalwrt-${{ github.event.inputs.branch }}-${{ github.event.inputs.target }}-${{ github.event.inputs.version }}
    runs-on: ubuntu-20.04
    # continue-on-error: true
    if: github.event.repository.owner.id == github.event.sender.id

    env:
      IP: ${{ github.event.inputs.ip }}
      VERSION: ${{ github.event.inputs.version }}
      PARTSIZE: ${{ github.event.inputs.partsize }}
      REPO_BRANCH: ${{ github.event.inputs.branch }}
      TARGET_DEVICE: ${{ github.event.inputs.target }}

    # strategy:
    #   fail-fast: false
    #   matrix:
    #     target: ["${{ github.event.inputs.target }}"]

    steps:
    - name: Checkout
      uses: actions/checkout@v3.1.0

    - name: ÂàùÂßãÁéØÂ¢É
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        nohup sh -c '
        sudo apt update;
        sudo apt -y --no-upgrade --no-install-recommends install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk
        sudo sysctl vm.swappiness=0
        ' &
        sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

    - name: ËøêË°åËá™ÂÆö‰πâ
      run: curl -fsSL git.io/J6IXO | /bin/bash

    - name: Cache
      uses: klever1988/cachewrtbuild@main
      continue-on-error: true
      if: env.CACHE_ACTIONS == 'true'
      with:
        ccache: 'true'
        mixkey: ${{env.REPO_BRANCH}}-${{env.ARCH}}-
        prefix: ${{github.workspace}}/${{env.REPO_FLODER}}
        clean: ${{env.CLEAN}}

    - name: ‰∏ãËΩΩËΩØ‰ª∂ÂåÖ
      run: |
        # sudo mkdir -p -m 777 /mnt/$REPO_FLODER/dl /mnt/$REPO_FLODER/bin /mnt/$REPO_FLODER/staging_dir
        # ln -sf /mnt/$REPO_FLODER/dl $REPO_FLODER/dl
        # ln -sf /mnt/$REPO_FLODER/bin $REPO_FLODER/bin
        # ln -sf /mnt/$REPO_FLODER/staging_dir $REPO_FLODER/staging_dir
        echo "======================="
        echo "Á£ÅÁõò‰ΩøÁî®ÊÉÖÂÜµ:"
        echo "======================="
        echo " Á≥ªÁªüÁ©∫Èó¥       Á±ªÂûã      ÊÄªÊï∞   Â∑≤Áî®  ÂèØÁî® ‰ΩøÁî®Áéá Ë∑ØÂæÑ"
        df -hT
        echo "======================="
        cd $REPO_FLODER
        make package/download -j32
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        sleep 5

    - name: Âõ∫‰ª∂ÁºñËØë
      timeout-minutes: 1440
      id: compile
      run: |
        shopt -s extglob
        cd $REPO_FLODER
        make -j$(($(nproc)+1)) || make -j1 V=s
        echo "status=success" >>$GITHUB_OUTPUT

    - name: ‰∏ä‰º†ÈîôËØØÊó•Âøó
      uses: actions/upload-artifact@v3
      if: steps.compile.outputs.status != 'success' && !cancelled()
      with:
        name: Logs_Toolchain_${{ env.FILE_DATE }}
        path: ${{ env.REPO_FLODER }}/logs

    - name: Á£ÅÁõò‰ΩøÁî®ÊÉÖÂÜµ
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        cd $REPO_FLODER
        echo "======================="
        echo "Á£ÅÁõò‰ΩøÁî®ÊÉÖÂÜµ:"
        echo "======================="
        echo " Á≥ªÁªüÁ©∫Èó¥       Á±ªÂûã      ÊÄªÊï∞   Â∑≤Áî®  ÂèØÁî® ‰ΩøÁî®Áéá Ë∑ØÂæÑ"
        df -hT
        echo "======================="
        du -h --max-depth=1 ./ --exclude=bin --exclude=build_dir --exclude=staging_dir
        du -h --max-depth=1 ./bin
        du -h --max-depth=1 ./build_dir
        du -h --max-depth=1 ./staging_dir

    - name: Á≠õÈÄâÂõ∫‰ª∂
      id: organize
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        mkdir firmware output
        ls $REPO_FLODER/bin/targets/*/*/
        REPOSITORY="ImmortalWrt"
        cp -v $(find $REPO_FLODER/bin/targets/ -type f -name "*${FIRMWARE_TYPE}*") firmware
        tar -zcPf firmware/${REPOSITORY}-${REPO_BRANCH#*-}-$(date +%m-%d)-${ARCH}-${VERSION}-packages.tar.gz $REPO_FLODER/bin/packages/
        cp -vrf $REPO_FLODER/.config firmware/${REPOSITORY}-${REPO_BRANCH#*-}-$(date +%m-%d)-${TARGET_DEVICE}-${VERSION}-config.txt
        cd firmware && md5sum * >>${REPOSITORY}-${REPO_BRANCH#*-}-$(date +%m-%d)-${TARGET_DEVICE}-${VERSION}-md5.txt
        echo "FIRMWARE=$PWD" >>$GITHUB_ENV
        echo "STRDATE=$(TZ=UTC-8 date +%Y-%m-%d)" >>$GITHUB_ENV
        Emoji=("üéâ" "ü§û" "‚ú®" "üéÅ" "üéà" "üéÑ" "üé®" "üíã" "üçì" "üçï" "üçâ" "üíê" "üå¥" "üöÄ" "üóΩ" "‚õÖ" "üåà" "üî•" "‚õÑ" "üê∂" "üèÖ" "ü¶Ñ" "üê§")
        RANDOM=$$$(date +%s); rand=$[$RANDOM % ${#Emoji[@]}]
        echo "EMOJI=${Emoji[$rand]}" >>$GITHUB_ENV
        echo "status=success" >>$GITHUB_OUTPUT
        
    - name: ‰∏ä‰º†binÂåÖ
      uses: actions/upload-artifact@v3
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true' && !cancelled()
      with:
        name: OpenWrt-${{env.TARGET_DEVICE}}-bin
        path: ${{env.REPO_FLODER}}/bin

    - name: ‰∏ä‰º†packagesÂåÖ
      uses: actions/upload-artifact@v3
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_PACKAGES == 'true' && !cancelled()
      with:
        name: OpenWrt-${{env.TARGET_DEVICE}}-package
        path: ${{env.REPO_FLODER}}/bin/packages

    - name: ‰∏ä‰º†firmware
      uses: actions/upload-artifact@v3
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_SYSUPGRADE == 'true' && !cancelled()
      with:
        name: OpenWrt-${{env.TARGET_DEVICE}}-firmware
        path: firmware/*${{env.FIRMWARE_TYPE}}*

    - name: ‰∏ä‰º†Âà∞Â•∂ÁâõÂø´‰º†
      id: cowtransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=‚Üì‚ÜìÂ•∂ÁâõÂø´‰º†‰∏ãËΩΩÂú∞ÂùÄ‚Üì‚Üì::$(grep https cowtransfer.log)"

    - name: ‰∏ä‰º†Âà∞WeTransfer
      id: wetransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=‚Üì‚Üìwetransfer‰∏ãËΩΩÂú∞ÂùÄ‚Üì‚Üì::$(grep https wetransfer.log)"

    - name: fetch_cache
      id: fetch_cache
      if: env.FETCH_CACHE == 'true' && !cancelled()
      run: |
        curl -fsSL https://raw.githubusercontent.com/hong0980/diy/master/fetch_cache.sh | /bin/bash
        echo "status=success" >>$GITHUB_OUTPUT

    # - name: ‰∏ä‰º†Âà∞ release
    #   if: steps.organize.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true'&& !cancelled()
    #   uses: ncipollo/release-action@v1.11.2
    #   with:
    #     allowUpdates: true
    #     replacesArtifacts: true
    #     artifacts: firmware/*
    #     tag: ${{env.STRDATE}}
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     name: ${{env.STRDATE}} ${{env.EMOJI}} Ëá™Âä®ÂèëÂ∏É ${{env.EMOJI}}

    - name: ‰∏ä‰º†Âà∞ Release
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true'&& !cancelled()
      uses: softprops/action-gh-release@v1
      with:
        files: firmware/*
        append_body: true
        tag_name: ${{env.STRDATE}}
        token: ${{ secrets.GITHUB_TOKEN }}
        name: ${{env.STRDATE}} ${{env.EMOJI}} Ëá™Âä®ÂèëÂ∏É ${{env.EMOJI}}
